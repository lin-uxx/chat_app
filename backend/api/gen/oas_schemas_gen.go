// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
	"io"
)

func (s *ErrorResponseStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrorResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrorResponse) SetMessage(val string) {
	s.Message = val
}

// ErrorResponseStatusCode wraps ErrorResponse with StatusCode.
type ErrorResponseStatusCode struct {
	StatusCode int
	Response   ErrorResponse
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorResponseStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorResponseStatusCode) GetResponse() ErrorResponse {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorResponseStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorResponseStatusCode) SetResponse(val ErrorResponse) {
	s.Response = val
}

type LoginPostUnauthorized struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s LoginPostUnauthorized) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*LoginPostUnauthorized) loginPostRes() {}

// Ref: #/components/schemas/LoginRequest
type LoginRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *LoginRequest) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *LoginRequest) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *LoginRequest) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *LoginRequest) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/LoginResponse
type LoginResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *LoginResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *LoginResponse) SetMessage(val string) {
	s.Message = val
}

func (*LoginResponse) loginPostRes() {}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type SignupPostUnauthorized struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s SignupPostUnauthorized) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*SignupPostUnauthorized) signupPostRes() {}

// Ref: #/components/schemas/SignupRequest
type SignupRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

// GetUsername returns the value of Username.
func (s *SignupRequest) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *SignupRequest) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *SignupRequest) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *SignupRequest) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/SignupResponse
type SignupResponse struct {
	Message OptString `json:"message"`
}

// GetMessage returns the value of Message.
func (s *SignupResponse) GetMessage() OptString {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *SignupResponse) SetMessage(val OptString) {
	s.Message = val
}

func (*SignupResponse) signupPostRes() {}
